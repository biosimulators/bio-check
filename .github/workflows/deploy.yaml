name: Continuous Deployment

on:
  workflow_dispatch:

jobs:
  set-up-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.REPO_ADMIN_GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.REPO_ADMIN_GH_USERNAME }}" --password-stdin

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check if Docker Compose is installed correctly

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.34.2/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

  build-microservice-containers:
    runs-on: ubuntu-latest
    needs: set-up-dependencies
    outputs:
      api_version: ${{ steps.extract_api_version.outputs.api_version }}
      worker_version: ${{ steps.extract_worker_version.outputs.worker_version }}
    steps:
      - name: Extract api container version
        id: extract_api_version
        run: |
          VERSION=$(yq eval '.services.compose_api.image' ../docker-compose.yaml | cut -d ':' -f2)
          echo "::set-output name=api_version::$VERSION"

      - name: Extract worker container version
        id: extract_worker_version
        run: |
          VERSION=$(yq eval '.services.compose_worker.image' ../docker-compose.yaml | cut -d ':' -f2)
          echo "::set-output name=worker_version::$VERSION"

      - name: Debug output of extracted versions
        run: |
          echo "API_VERSION=${{ steps.extract_api_version.outputs.api_version }}"
          echo "WORKER_VERSION=${{ steps.extract_worker_version.outputs.worker_version }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker containers with Docker Compose
        run: docker-compose build --no-cache

  deploy-microservice-containers:
    runs-on: ubuntu-latest
    needs: build-microservice-containers
    steps:
      - name: Change push script permissions
        run: |
          chmod +x ./assets/scripts/push_image.sh

      - name: Deploy api microservice container to GHCR
        run: |
          ./assets/scripts/push_image.sh compose_api ${{ needs.build-microservice-containers.outputs.api_version }}
        env:
          REPO_ADMIN_GH_USERNAME: ${{ secrets.REPO_ADMIN_GH_USERNAME }}
          REPO_ADMIN_GHCR_TOKEN: ${{ secrets.REPO_ADMIN_GHCR_TOKEN }}

      - name: Deploy worker microservice container to GHCR
        run: |
          ./assets/scripts/push_image.sh compose_worker ${{ needs.build-microservice-containers.outputs.worker_version }}
        env:
          REPO_ADMIN_GH_USERNAME: ${{ secrets.REPO_ADMIN_GH_USERNAME }}
          REPO_ADMIN_GHCR_TOKEN: ${{ secrets.REPO_ADMIN_GHCR_TOKEN }}