# Worker microservice

FROM ghcr.io/biosimulators/bio-check-base:latest

# os deps
RUN apt-get update && apt-get install -y libatlas-base-dev \
    libhdf5-serial-dev \
    swig \
    libboost-all-dev \
    git \
    meson \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# TODO: start the implementation: fencis deps
# RUN apt-get update && apt-get install -y petsc-dev \
#     libopenmpi-dev \
#     libspdlog-dev \
#     libpugixml-dev \
#     cmake \
#     gcc \
#     g++ \
#     gfortran \
#     && rm -rf /var/lib/apt/lists/* \
#     && add-apt-repository ppa:fenics-packages/fenics -y \
#     && apt update \
#     && apt install -y fenicsx

# copy content
COPY . /app/worker

# install requirements
RUN /app/assets/install_deps.sh /app/worker/requirements.worker.txt

# add deps with extras
RUN yes | poetry cache clear PyPI --all \
    && poetry add biosimulators-utils@^0.1.188 --extras=logging \
    && poetry add pysces --extras=sbml

# RUN poetry add pysces --extras=sbml \
#     && poetry add biosimulators-utils --extras=logging

WORKDIR /app/worker

RUN python3 -c "import os;files=os.listdir();import shutil;[shutil.rmtree(f) if '__pycache__' in f else None for f in files]"

ENTRYPOINT ["poetry", "run", "python3", "main.py"]


# apt-get update
# apt-get install -y apt-transport-https ca-certificates curl software-properties-common
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
# add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
# apt-get update
# apt-get install -y docker-ce