# FROM ubuntu:22.04
FROM continuumio/miniconda3:latest

LABEL org.opencontainers.image.title="bio-check-base" \
    org.opencontainers.image.description="Base Docker image for BioCompose REST API management, job processing, and datastorage with MongoDB, ensuring scalable and robust performance." \
    org.opencontainers.image.url="https://biosimulators.org/" \
    org.opencontainers.image.source="https://github.com/biosimulators/bio-check" \
    org.opencontainers.image.authors="Alexander Patrie <apatrie@uchc.edu>, BioSimulators Team <info@biosimulators.org>" \
    org.opencontainers.image.vendor="BioSimulators Team"

# SHELL ["/bin/bash", "-c"]
SHELL ["/usr/bin/env", "bash", "-c"]

# shared env
ENV DEBIAN_FRONTEND=noninteractive \
    MONGO_URI="mongodb://mongodb/?retryWrites=true&w=majority&appName=bio-check" \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_NO_INTERACTION=1

# copy docker
COPY assets/docker/config/.biosimulations.json /.google/.bio-check.json
COPY assets/docker/config/.pys_usercfg.ini /Pysces/.pys_usercfg.ini
COPY assets/docker/config/.pys_usercfg.ini /root/Pysces/.pys_usercfg.ini
COPY assets/docker/shared.py assets/test_fixtures /app/
COPY assets/docker/config/environment.base.yml /app/environment.base.yml

# cd /app
WORKDIR /app

RUN mkdir -p /Pysces \
    && mkdir -p /Pysces/psc \
    && mkdir -p /root/Pysces \
    && mkdir -p /root/Pysces/psc \
    && conda env create -n server -f environment.base.yml -y \
    && echo "conda activate server" >> ~/.bashrc


# # create conda env from yml and ensure env activation
# RUN conda env create -f config/environment.base.yml -y \
#     && rm -f config/environment.base.yml \
#     && conda env export --no-builds > config/environment.lock.yml \
#     && poetry lock

# create lockfile conda analogy: conda env export --no-builds > environment.lock.yml
# && conda create -n conda-env python=3.10 -y \
# && poetry install --without=api,worker,composition \
# && poetry config virtualenvs.in-project true \