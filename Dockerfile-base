FROM ubuntu:22.04

LABEL org.opencontainers.image.title="bio-check-base" \
    org.opencontainers.image.description="Base Docker image for BioCompose REST API management, job processing, and datastorage with MongoDB, ensuring scalable and robust performance." \
    org.opencontainers.image.url="https://biosimulators.org/" \
    org.opencontainers.image.source="https://github.com/biosimulators/bio-check" \
    org.opencontainers.image.authors="Alexander Patrie <apatrie@uchc.edu>, BioSimulators Team <info@biosimulators.org>" \
    org.opencontainers.image.vendor="BioSimulators Team"

# enforce more dynamic shell
SHELL ["/usr/bin/env", "bash", "-c"]

# shared env
ENV DEBIAN_FRONTEND=noninteractive \
    MONGO_URI="mongodb://mongodb/?retryWrites=true&w=majority&appName=bio-check" \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_NO_INTERACTION=1

# copy assets
COPY assets/configs/.biosimulations.json /.google/.bio-check.json
COPY assets/configs/environment.base.yml /tmp/environment.base.yml
COPY assets/configs/.pys_usercfg.ini /Pysces/.pys_usercfg.ini
COPY assets/configs/.pys_usercfg.ini /root/Pysces/.pys_usercfg.ini
COPY pyproject.toml assets/shared.py /app/

# cd /app
WORKDIR /app

RUN apt-get update  \
    && apt-get install -y \
    python3.10 \
    python3-pip \
    python3-dev \
    ca-certificates \
    wget \
    && mkdir -p /Pysces \
    && mkdir -p /Pysces/psc \
    && mkdir -p /root/Pysces \
    && mkdir -p /root/Pysces/psc \
    && chmod ugo+rw -R /Pysces \
    && python3.10 -m pip install --upgrade pip \
    && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh  \
    && chmod +x /tmp/miniconda.sh \
    && /tmp/miniconda.sh -b -p /opt/conda

# # add conda to PATH
ENV PATH="/opt/conda/bin:/opt/conda/envs/conda-env/bin:$PATH"

# # create conda env from yml and ensure env activation
RUN conda init bash \
    && conda create -n conda-env python=3.10 -y \
    && conda run python3 -m pip install --upgrade pip \
    && conda env update -n conda-env -f /tmp/environment.base.yml \
    && echo "conda activate conda-env" >> ~/.bashrc \
    && source ~/.bashrc \
    && poetry lock  \
    && poetry install --only=base \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean \
    && conda clean --all --json -y

# && poetry install --without=api,worker,composition \
# && poetry config virtualenvs.in-project true \