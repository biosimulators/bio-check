FROM ubuntu:22.04

LABEL \
    org.opencontainers.image.title="bio-check-base" \
    org.opencontainers.image.description="Base Docker image for BioCompose REST API management, job processing, and datastorage with MongoDB, ensuring scalable and robust performance." \
    org.opencontainers.image.url="https://biosimulators.org/" \`
    org.opencontainers.image.source="https://github.com/biosimulators/bio-check" \
    org.opencontainers.image.authors="Alexander Patrie <apatrie@uchc.edu>, BioSimulators Team <info@biosimulators.org>" \
    org.opencontainers.image.vendor="BioSimulators Team"

ENV DEBIAN_FRONTEND=noninteractive
ENV MONGO_URI="mongodb://mongodb/?retryWrites=true&w=majority&appName=bio-check"

RUN apt-get update && apt-get install -y \
    python3.10  \
    ca-certificates \
    libhdf5-dev \
    libhdf5-serial-dev \
    python3-pip  \
    python3-dev \
    build-essential \
    libncurses5  \
    libxml2 \
    cmake  \
    make  \
    libx11-dev  \
    libc6-dev  \
    libx11-6  \
    libgl1-mesa-dev \
    libc6  \
    gcc  \
    libatlas-base-dev \
    swig \
    pkg-config  \
    curl  \
    tar  \
    libgl1-mesa-glx  \
    libice6  \
    libpython3.10  \
    libsm6 \
    wget \
    libatlas-base-dev  \
    libhdf5-serial-dev  \
    swig  \
    libboost-all-dev  \
    gnupg \
    bzip2 \
    && mkdir -p /Pysces \
    && mkdir -p /Pysces/psc \
    && mkdir -p /root/Pysces \
    && mkdir -p /root/Pysces/psc \
    && chmod ugo+rw -R /Pysces \
    && python3.10 -m pip install --upgrade pip \
    && wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh  \
    && chmod +x /tmp/miniconda.sh \
    && /tmp/miniconda.sh -b -p /opt/conda

# add conda to PATH
ENV PATH="/opt/conda/bin:/opt/conda/envs/conda-env/bin:$PATH"

# initialize Conda for bash
# RUN /opt/conda/bin/conda init bash

# copy creds
COPY assets/configs/.biosimulations.json /.google/.bio-check.json
COPY assets/environment.base.yml /tmp/environment.base.yml

# RUN /opt/conda/bin/conda create -n conda-env python=3.10 poetry -c conda-forge -y
# RUN conda create -n conda-env python=3.10 -y

SHELL ["/usr/bin/env", "bash", "-c"]

RUN conda init bash

RUN conda create -n conda-env python=3.10 -y \
    && echo "conda activate conda-env" >> ~/.bashrc

RUN source ~/.bashrc \
    && conda run python3 -m pip install --upgrade pip \
    && conda env update -n conda-env -f /tmp/environment.base.yml

# set up environment variables for Poetry
ENV POETRY_VIRTUALENVS_CREATE=false \
    POETRY_NO_INTERACTION=1

WORKDIR /app

# copy assets
COPY assets/configs/requirements.base.txt ./assets/scripts/remove_deps.sh ./assets/scripts/update_deps.sh ./assets/dropped.txt ./assets/scripts/install_deps.sh /app/assets/
COPY pyproject.toml /app/pyproject.toml
COPY assets/configs/.pys_usercfg.ini /Pysces/.pys_usercfg.ini
COPY assets/configs/.pys_usercfg.ini /root/Pysces/.pys_usercfg.ini

RUN echo "BioCompose Server" > /app/README.md \
  && source ~/.bashrc  \
  && poetry config virtualenvs.in-project true \
  && poetry lock  \
  && poetry install --without=api,worker \
  && rm -rf /var/lib/apt/lists/* \
  && apt-get autoremove -y  \
  && apt-get clean
#  \
#     && poetry env use 3.10 \
#     && poetry lock \
#     && poetry install --without=api,worker \
#     &&
#     && conda init \
#     && conda activate conda-env  \