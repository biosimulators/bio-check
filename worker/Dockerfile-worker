# Worker microservice

# FROM ghcr.io/biosimulators/bio-check-base:latest TODO: change this back to latest
FROM ghcr.io/biosimulators/bio-check-base:0.2.2-test

SHELL ["/usr/bin/env", "bash", "-c"]

# os deps
RUN apt-get update && apt-get install -y libatlas-base-dev \
    libhdf5-serial-dev \
    swig \
    libboost-all-dev \
    git \
    meson \
    build-essential \
    g++ \
    gfortran \
    libblas-dev \
    liblapack-dev \
    gcc \
    gfortran \
    libgfortran5 \
    bzip2 \
    libxml2 \
    libncurses5

# optionally for boost support (thread-specific CPU times, extended math functions, serialization)
COPY config/environment.worker.yml /tmp/environment.worker.yml
COPY . /app/worker

RUN source ~/.bashrc \
    && conda install -c conda-forge -c pysces pysces -y \
    && conda env update -n conda-env -f /tmp/environment.worker.yml \
    && poetry install --only=worker --no-cache \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y  \
    && apt-get clean

# && /usr/bin/env bash -c "source ~/.bashrc && conda activate conda-env && poetry install --only=worker --no-cache" \

ENV TEST_SBML_FP="test_fixtures/Elowitz-Nature-2000-Repressilator/BIOMD0000000012_url.xml" \
    TEST_PSC_FP="/Pysces/psc/BIOMD0000000012_url.xml.psc" \
    TEST_OMEX_FP="test_fixtures/Elowitz-Nature-2000-Repressilator.omex"

WORKDIR /app/worker

ENTRYPOINT ["/usr/bin/env", "bash", "-c", "source ~/.bashrc && conda activate conda-env && poetry run python3 main.py"]

ENTRYPOINT ["bash", "-c", "source ~/.bashrc && poetry run python3 main.py"]

#############################
# Fenics

# TODO: start the fenics implementation
# RUN apt-get update && apt-get install -y petsc-dev \
#     libopenmpi-dev \
#     libspdlog-dev \
#     libpugixml-dev \
#     cmake \
#     gcc \
#     g++ \
#     gfortran \
#     && rm -rf /var/lib/apt/lists/* \
#     && add-apt-repository ppa:fenics-packages/fenics -y \
#     && apt update \
#     && apt install -y fenicsx \
#     && poetry run pip install meson-python meson ninja

# install requirements in poetry via pip prox
# RUN poetry run pip install -r /app/worker/requirements.worker.txt

# install masspy TODO: do this
# RUN poetry run pip install biosimulators-masspy


