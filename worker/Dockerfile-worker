# Worker microservice

# FROM ghcr.io/biosimulators/bio-check-base:latest
# FROM ghcr.io/biosimulators/bio-compose-server-base:latest

# TODO: change this back to latest once stable
FROM ghcr.io/biosimulators/bio-compose-server-base:0.0.5

SHELL ["/usr/bin/env", "bash", "-c"]

COPY ./ .

ENV TEST_SBML_FP="test_fixtures/Elowitz-Nature-2000-Repressilator/BIOMD0000000012_url.xml" \
    TEST_PSC_FP="/Pysces/psc/BIOMD0000000012_url.xml.psc" \
    TEST_OMEX_FP="test_fixtures/Elowitz-Nature-2000-Repressilator.omex"

# TODO: perhaps run --no-install-recommends?
RUN source ~/.bashrc \
    && apt-get update  \
    && apt install -y \
    meson \
    g++ \
    gfortran \
    libblas-dev \
    liblapack-dev \
    libgfortran5 \
    libhdf5-dev \
    libhdf5-serial-dev \
    libatlas-base-dev \
    cmake \
    make \
    git \
    build-essential \
    python3-dev \
    swig \
    libc6-dev \
    libx11-dev \
    libc6 \
    libgl1-mesa-dev \
    pkg-config \
    curl \
    tar \
    libgl1-mesa-glx \
    libice6 \
    libsm6 \
    gnupg \
    libboost-chrono-dev \
    libboost-math-dev \
    libboost-serialization-dev \
    && conda env update -n server -f config/environment.worker.yml \
    && conda run pip install -e . --root-user-action=ignore \
    && conda env export --no-builds > config/environment.worker.lock.yml \
    && conda clean --all --json -y \
    && rm -f config/environment.worker.yml \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

ENTRYPOINT ["bash", "-c", "source ~/.bashrc && conda run python3 main.py"]


#############################
# Fenics installation

# TODO: start the fenics implementation
# RUN apt-get update && apt-get install -y petsc-dev \
#     libopenmpi-dev \
#     libspdlog-dev \
#     libpugixml-dev \
#     cmake \
#     gcc \
#     g++ \
#     gfortran \
#     && rm -rf /var/lib/apt/lists/* \
#     && add-apt-repository ppa:fenics-packages/fenics -y \
#     && apt update \
#     && apt install -y fenicsx \
#     && poetry run pip install meson-python meson ninja

# install requirements in poetry via pip prox
# RUN poetry run pip install -r /app/worker/requirements.worker.txt

# install masspy TODO: do this
# RUN poetry run pip install biosimulators-masspy


