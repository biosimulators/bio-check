# Worker microservice

# FROM ghcr.io/biosimulators/bio-check-base:latest
# FROM ghcr.io/biosimulators/bio-compose-server-base:latest

# TODO: change this back to latest once stable
FROM ghcr.io/biosimulators/bio-compose-server-base:latest

SHELL ["/usr/bin/env", "bash", "-c"]

COPY . .

ENV MONGO_URI=mongodb://mongodb/service_requests

# TODO: separate these into blocks by dep, then use that block in the dynamic_install
# RUN source ~/.bashrc \
#     && apt-get update  \
#     && apt install -y \
#     meson \
#     g++ \
#     gfortran \
#     libblas-dev \
#     liblapack-dev \
#     libgfortran5 \
#     libhdf5-dev \
#     libhdf5-serial-dev \
#     libatlas-base-dev \
#     cmake \
#     make \
#     git \
#     build-essential \
#     python3-dev \
#     swig \
#     libc6-dev \
#     libx11-dev \
#     libc6 \
#     libgl1-mesa-dev \
#     pkg-config \
#     curl \
#     tar \
#     libgl1-mesa-glx \
#     libice6 \
#     libsm6 \
#     gnupg \
#     libboost-chrono-dev \
#     libboost-math-dev \
#     libboost-serialization-dev \
#     && conda env update -n server -f environment.worker.yml \
#     && conda env export --no-builds > config/environment.worker.lock.yml \
#     && conda clean -t -l --json -y \
#     && rm -f environment.worker.yml \
#     && rm -rf /var/lib/apt/lists/* \
#     && apt-get autoremove -y \
#     && apt-get clean

RUN source ~/.bashrc \
    && apt-get update  \
    && apt install -y \
    meson \
    g++ \
    gfortran \
    libblas-dev \
    liblapack-dev \
    libgfortran5 \
    libhdf5-dev \
    libhdf5-serial-dev \
    libatlas-base-dev \
    cmake \
    make \
    git \
    build-essential \
    python3-dev \
    swig \
    libc6-dev \
    libx11-dev \
    libc6 \
    libgl1-mesa-dev \
    pkg-config \
    curl \
    tar \
    libgl1-mesa-glx \
    libice6 \
    libsm6 \
    gnupg \
    libboost-chrono-dev \
    libboost-math-dev \
    libboost-serialization-dev \
    && conda run -n server pip3 install simulariumio process-bigraph h5py biosimulators-utils[logging] python-libsbml \
    && conda clean -t -l --json -y \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean \
    && chmod +x ./dynamic_install.sh

# ENTRYPOINT ["bash", "-c", "source ~/.bashrc && conda run -n server python3 main.py"]
ENTRYPOINT ["bash", "-c", "source ~/.bashrc && ./dynamic_install.sh"]

#############################
# Fenics installation

# TODO: start the fenics implementation
# RUN apt-get update && apt-get install -y petsc-dev \
#     libopenmpi-dev \
#     libspdlog-dev \
#     libpugixml-dev \
#     cmake \
#     gcc \
#     g++ \
#     gfortran \
#     && rm -rf /var/lib/apt/lists/* \
#     && add-apt-repository ppa:fenics-packages/fenics -y \
#     && apt update \
#     && apt install -y fenicsx \
#     && poetry run pip install meson-python meson ninja

# install requirements in poetry via pip prox
# RUN poetry run pip install -r /app/worker/requirements.worker.txt

# install masspy TODO: do this
# RUN poetry run pip install biosimulators-masspy


